{"version":3,"file":"webaverse-backend.js","mappings":"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","sources":["webpack://api-backend/./src/controllers/hello.controller.ts","webpack://api-backend/./src/services/hello.service.ts","webpack://api-backend/external commonjs \"express\"","webpack://api-backend/external commonjs \"reflect-metadata\"","webpack://api-backend/external commonjs \"routing-controllers\"","webpack://api-backend/external commonjs \"typedi\"","webpack://api-backend/webpack/bootstrap","webpack://api-backend/webpack/runtime/compat get default export","webpack://api-backend/webpack/runtime/define property getters","webpack://api-backend/webpack/runtime/hasOwnProperty shorthand","webpack://api-backend/webpack/runtime/make namespace object","webpack://api-backend/./src/index.ts"],"sourcesContent":["import { Body, BodyParam, Get, JsonController, Param, Post, QueryParams, Res } from 'routing-controllers';\nimport { HelloService } from '@webaverse/services/hello.service';\nimport { Service } from 'typedi';\n\n@JsonController('/hello')\n@Service()\nexport class HelloController {\n    constructor(private helloService:HelloService) {\n    }\n\n    @Get('')\n    async getRequest(@QueryParams() query, @Res() response: any) {\n        return response.send(await this.helloService.hello());\n    }\n\n    @Post('')\n    async postReqeust(@QueryParams() query, @Res() response: any) {\n        return response.send(await this.helloService.hello());\n    }\n\n}\n","import { Service } from 'typedi';\nimport hash from 'object-hash';\n\nconst cache: {\n    [key: string]: {\n        time: number,\n        value: any\n    }\n} | {} = {};\n\n@Service()\nexport class HelloService {\n    constructor() {\n    }\n\n    async hello(param1?: string) {\n        return {hello : \"world\"};\n    }\n}\n","module.exports = require(\"express\");","module.exports = require(\"reflect-metadata\");","module.exports = require(\"routing-controllers\");","module.exports = require(\"typedi\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import 'reflect-metadata';\nimport express from 'express';\nimport { useContainer, useExpressServer } from 'routing-controllers';\nimport { Container } from 'typedi';\nimport { HelloController } from '@webaverse/controllers/hello.controller';\n\nexport const Search = {\n    start: () => {\n        useContainer(Container);\n\n        const app = express();\n\n        app.use(function (req, res, next) {\n            req.setTimeout(0); // no timeout for all requests, your server will be DoS'd\n            next();\n        });\n\n        app.use(express.urlencoded({ extended: true }));\n\n        // Configure controllers\n        useExpressServer(app, {\n            routePrefix: '/api',\n            controllers: [\n                HelloController\n            ],\n        });\n\n        app.get('*', (req, res, next) => {\n            if (req.path.startsWith('/api')) {\n                next();\n            } else {\n                res.end();\n            }\n        });\n\n        const server = app.listen(process.env.PORT || 3000, () => {\n            // eslint-disable-next-line no-console\n            console.log(`⚡️[server]: Server is running at https://localhost:${process.env.PORT || 3000}`);\n        });\n\n        server.setTimeout(0);\n    },\n};\n\nSearch.start();"],"names":[],"sourceRoot":""}